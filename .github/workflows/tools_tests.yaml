name: tools

on:
  push:
    branches:
      - meta-actions
  pull_request:

concurrency:
  group: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  BASE_IMAGE: openpilot-base
  CL_BASE_IMAGE: openpilot-base-cl
  DOCKER_LOGIN: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

  BUILD: selfdrive/test/docker_build.sh base

  RUN: docker run --shm-size 1G -v $GITHUB_WORKSPACE:/tmp/openpilot -w /tmp/openpilot -e FILEREADER_CACHE=1 -e PYTHONPATH=/tmp/openpilot -e NUM_JOBS -e JOB_ID -e GITHUB_ACTION -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_RUN_ID -v $GITHUB_WORKSPACE/.ci_cache/scons_cache:/tmp/scons_cache -v $GITHUB_WORKSPACE/.ci_cache/comma_download_cache:/tmp/comma_download_cache -v $GITHUB_WORKSPACE/.ci_cache/openpilot_cache:/tmp/openpilot_cache $BASE_IMAGE /bin/bash -c

  BUILD_CL: selfdrive/test/docker_build.sh cl

  RUN_CL: docker run --shm-size 1G -v $GITHUB_WORKSPACE:/tmp/openpilot -w /tmp/openpilot -e PYTHONPATH=/tmp/openpilot -e NUM_JOBS -e JOB_ID -e GITHUB_ACTION -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_RUN_ID -v $GITHUB_WORKSPACE/.ci_cache/scons_cache:/tmp/scons_cache -v $GITHUB_WORKSPACE/.ci_cache/comma_download_cache:/tmp/comma_download_cache -v $GITHUB_WORKSPACE/.ci_cache/openpilot_cache:/tmp/openpilot_cache $CL_BASE_IMAGE /bin/bash -c


jobs:  
  build-docker:
    name: Build Docker Images
    runs-on: ubuntu-20.04
    outputs:
      docker-base-image: ${{ steps.docker_base.outputs.digest }}
      docker-cl-image: ${{ steps.docker_cl.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: git lfs pull
      - uses: ./.github/workflows/setup-with-retry
      - name: Build base docker image
        id: docker_base
        run: |
          eval "$BUILD"
          echo "::set-output name=digest::$(docker images --no-trunc | grep 'base-image' | awk '{print $3}')"
      - name: Build base cl image
        id: docker_cl
        run: |
          eval "$BUILD_CL"
          echo "::set-output name=digest::$(docker images --no-trunc | grep 'cl-image' | awk '{print $3}')"
      - name: Save and Upload Docker Images
        run: |
          mkdir -p $GITHUB_WORKSPACE/docker_images
          docker save $BASE_IMAGE $CL_BASE_IMAGE > $GITHUB_WORKSPACE/docker_images/images.tar
      - uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: $GITHUB_WORKSPACE/docker_images

  build-openpilot:
    name: Build Openpilot
    needs: build-docker
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: git lfs pull
      - uses: ./.github/workflows/setup-with-retry
      - name: Load Docker Images
        run: |
          docker load < path/to/docker/base-image.tar
          docker load < path/to/docker/cl-image.tar
      - name: Build Openpilot
        run: |
          docker run ${{ needs.build-docker.outputs.docker-base-image }} "scons -j$(nproc)"
      - name: Save and Upload Openpilot Build
        run: |
            mkdir -p $GITHUB_WORKSPACE/openpilot_build
            cp -r [Openpilot build directory] $GITHUB_WORKSPACE/openpilot_build
      - uses: actions/upload-artifact@v3
        with:
          name: openpilot-build
          path: $GITHUB_WORKSPACE/openpilot_build

  simulator_bridge:
    name: Simulator Bridge Test
    needs: [build-docker, build-openpilot]
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
         run: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
              0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
              0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
              0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: openpilot-build
          path: path/to/openpilot/build
      - name: Download and Load Docker Images
        uses: actions/download-artifact@v3
        with:
          name: docker-images
          path: $GITHUB_WORKSPACE/docker_images
      - run: |
            docker load < $GITHUB_WORKSPACE/docker_images/images.tar
      - name: Download and Use Openpilot Build
        uses: actions/download-artifact@v3
        with:
          name: openpilot-build
          path: $GITHUB_WORKSPACE/openpilot_build
          run: |
            # Use the Openpilot build artifacts from $GITHUB_WORKSPACE/openpilot_build
  

  devcontainer:
    name: devcontainer
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Use local image for testing devcontainer with latest base image
      run: |
        echo "USE_LOCAL_IMAGE=true" >> "$GITHUB_ENV"
    - name: Setup Dev Container CLI
      run: npm install -g @devcontainers/cli
    - name: Build dev container image
      run: devcontainer build --workspace-folder .
    - name: Run dev container
      run: |
        mkdir -p /tmp/devcontainer_scons_cache/
        cp -r $GITHUB_WORKSPACE/.ci_cache/scons_cache/. /tmp/devcontainer_scons_cache/
        devcontainer up --workspace-folder .
    - name: Test environment
      run: |
        devcontainer exec --workspace-folder . scons -j$(nproc) cereal/ common/
        devcontainer exec --workspace-folder . pip install pip-install-test
        devcontainer exec --workspace-folder . touch /home/batman/.comma/auth.json
        devcontainer exec --workspace-folder . sudo touch /root/test.txt